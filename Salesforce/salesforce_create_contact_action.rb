# Description: Sublayer::Action responsible for creating a new contact in Salesforce.
# This action simplifies integration with Salesforce CRM by providing a streamlined way to add contacts
# directly from AI-driven workflows.
#
# Requires: 'restforce' gem
# $ gem install restforce
# Or add `gem 'restforce'` to your Gemfile
#
# It is initialized with contact details like first_name, last_name, email, etc.
# It returns the ID of the created Salesforce contact.
#
# Example usage: When you want to automatically add new leads generated by an AI model into Salesforce.

require 'restforce'

class SalesforceCreateContactAction < Sublayer::Actions::Base
  def initialize(first_name:, last_name:, email:, **additional_fields)
    @first_name = first_name
    @last_name = last_name
    @email = email
    @additional_fields = additional_fields
    @client = Restforce.new(
      username: ENV['SALESFORCE_USERNAME'],
      password: ENV['SALESFORCE_PASSWORD'],
      security_token: ENV['SALESFORCE_SECURITY_TOKEN'],
      client_id: ENV['SALESFORCE_CLIENT_ID'],
      client_secret: ENV['SALESFORCE_CLIENT_SECRET'],
      host: ENV['SALESFORCE_HOST'] || 'login.salesforce.com'
    )
  end

  def call
    begin
      contact = create_contact
      Sublayer.configuration.logger.log(:info, "Salesforce contact created successfully: \
#{contact.Id}")
      contact.Id
    rescue Restforce::ErrorCode::ERROR_CLASS => e
      error_message = "Error creating Salesforce contact: \
#{e.message}"
      Sublayer.configuration.logger.log(:error, error_message)
      raise StandardError, error_message
    end
  end

  private

  def create_contact
    @client.create('Contact',
      FirstName: @first_name,
      LastName: @last_name,
      Email: @email,
      **@additional_fields
    )
  end
end
