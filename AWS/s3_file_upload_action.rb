# Description: Sublayer::Action responsible for uploading a file to a specified AWS S3 bucket.
# This action is useful for storing outputs or artifacts generated during workflows in AWS's scalable cloud storage.
#
# Requires: `aws-sdk-s3` gem
# $ gem install aws-sdk-s3
# Or add `gem 'aws-sdk-s3'` to your Gemfile
#
# It is initialized with a bucket_name, file_path, and object_key and uploads the file to S3.
#
# Example usage: When you want to store a file generated by an AI process in AWS S3.

require 'aws-sdk-s3'

class S3FileUploadAction < Sublayer::Actions::Base
  def initialize(bucket_name:, file_path:, object_key:)
    @bucket_name = bucket_name
    @file_path = file_path
    @object_key = object_key
    @client = Aws::S3::Client.new(region: ENV['AWS_REGION'],
                                 credentials: Aws::Credentials.new(ENV['AWS_ACCESS_KEY_ID'], ENV['AWS_SECRET_ACCESS_KEY']))
  end

  def call
    begin
      upload_file
      Sublayer.configuration.logger.log(:info, "Successfully uploaded \\#{@file_path} to S3 bucket \\#{@bucket_name}")
    rescue Aws::S3::Errors::ServiceError => e
      error_message = "Error uploading file to S3: \\#{e.message}"
      Sublayer.configuration.logger.log(:error, error_message)
      raise StandardError, error_message
    end
  end

  private

  def upload_file
    @client.put_object(
      body: File.read(@file_path),
      bucket: @bucket_name,
      key: @object_key
    )
  end
end
