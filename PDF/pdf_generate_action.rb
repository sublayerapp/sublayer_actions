require 'prawn'

# Description: Sublayer::Action responsible for generating PDF documents from structured data or text.
# This action allows for easy creation of reports, invoices, or other documents based on AI-generated content.
#
# Requires: 'prawn' gem
# $ gem install prawn
# Or add `gem 'prawn'` to your Gemfile
#
# It is initialized with content (either a string or a hash of structured data) and optional metadata.
# It returns the path to the generated PDF file.
#
# Example usage: When you want to create a PDF report or document based on AI-generated content.

class PDFGenerateAction < Sublayer::Actions::Base
  def initialize(content:, title: 'Generated Document', author: 'Sublayer AI', filename: nil)
    @content = content
    @title = title
    @author = author
    @filename = filename || "#{@title.downcase.gsub(' ', '_')}_#{Time.now.to_i}.pdf"
  end

  def call
    begin
      generate_pdf
      Sublayer.configuration.logger.log(:info, "Successfully generated PDF: #{@filename}")
      @filename
    rescue StandardError => e
      error_message = "Error generating PDF: #{e.message}"
      Sublayer.configuration.logger.log(:error, error_message)
      raise StandardError, error_message
    end
  end

  private

  def generate_pdf
    Prawn::Document.generate(@filename) do |pdf|
      pdf.text @title, size: 24, style: :bold, align: :center
      pdf.move_down 20
      
      if @content.is_a?(String)
        pdf.text @content
      elsif @content.is_a?(Hash)
        @content.each do |key, value|
          pdf.text "#{key}: #{value}", style: :bold
          pdf.move_down 10
        end
      else
        raise ArgumentError, 'Content must be either a String or a Hash'
      end
      
      pdf.number_pages "Generated by Sublayer AI - Page <page> of <total>", at: [pdf.bounds.right - 150, 0]
    end
  end
end
