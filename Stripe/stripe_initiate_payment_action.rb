require 'stripe'

# Description: Sublayer::Action for initiating payments via the Stripe API.
# Handles payment creation with error handling and logging.
#
# It is initialized with amount, currency, customer, payment_method, and optionally description and receipt_email.
# It returns the Stripe PaymentIntent object.
#
# Example usage: When you need to initiate a payment within a Sublayer workflow,
# such as processing a purchase request generated by an LLM.

class StripeInitiatePaymentAction < Sublayer::Actions::Base
  def initialize(amount:, currency:, customer:, payment_method:, description: nil, receipt_email: nil)
    @amount = amount
    @currency = currency
    @customer = customer
    @payment_method = payment_method
    @description = description
    @receipt_email = receipt_email

    Stripe.api_key = ENV['STRIPE_API_KEY']
  end

  def call
    begin
      payment_intent = Stripe::PaymentIntent.create(
        amount: @amount,
        currency: @currency,
        customer: @customer,
        payment_method: @payment_method,
        confirm: true,
        off_session: true, # For non-SCA payments
        description: @description,
        receipt_email: @receipt_email
      )

      Sublayer.configuration.logger.log(:info, "Stripe payment initiated successfully: #{payment_intent.id}")
      payment_intent
    rescue Stripe::StripeError => e
      error_message = "Error initiating Stripe payment: #{e.message}"
      Sublayer.configuration.logger.log(:error, error_message)
      raise StandardError, error_message
    end
  end
end