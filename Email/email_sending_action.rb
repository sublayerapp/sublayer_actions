require 'mail'

# Description: Sublayer::Action responsible for sending an email using a specified service (e.g., Gmail or Outlook).
# This action can be used for notifications, alerts, or sending reports generated by AI workflows.
#
# It is initialized with the parameters required to send an email including the service settings, recipient, subject, and body.
# It returns a success message upon successfully sending the email.
#
# Example usage: When you want to send a notification or an AI-generated report via email.

class EmailSendingAction < Sublayer::Actions::Base
  def initialize(service_settings:, recipient:, subject:, body:, attachments: [])
    @service_settings = service_settings
    @recipient = recipient
    @subject = subject
    @body = body
    @attachments = attachments

    configure_mail
  end

  def call
    mail = Mail.new do
      to @recipient
      from @service_settings[:from]
      subject @subject
      body @body
    end

    add_attachments(mail)

    mail.deliver!
    Sublayer.configuration.logger.log(:info, "Email sent successfully to #{@recipient}")
    "Email sent successfully to #{@recipient}"
  rescue StandardError => e
    error_message = "Error sending email: #{e.message}"
    Sublayer.configuration.logger.log(:error, error_message)
    raise StandardError, error_message
  end

  private

  def configure_mail
    Mail.defaults do
      delivery_method :smtp, {
        address: @service_settings[:address],
        port: @service_settings[:port],
        user_name: @service_settings[:user_name],
        password: @service_settings[:password],
        authentication: 'plain',
        enable_starttls_auto: true
      }
    end
  end

  def add_attachments(mail)
    @attachments.each do |file_path|
      mail.add_file(file_path)
    end
  end
end
