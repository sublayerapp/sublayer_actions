require 'mail'

# Description: Sublayer::Action responsible for sending emails via a specified email service provider.
# It takes parameters like recipient email, subject, and email body.
# It can be used for sending automated responses, updates, or reports generated by Sublayer agents.

class SendEmailAction < Sublayer::Actions::Base
  def initialize(recipient_email:, subject:, email_body:, sender_email: nil, sender_password: nil, delivery_method: :smtp, smtp_settings: {})
    @recipient_email = recipient_email
    @subject = subject
    @email_body = email_body
    @sender_email = sender_email || ENV['SENDER_EMAIL']
    @sender_password = sender_password || ENV['SENDER_PASSWORD']
    @delivery_method = delivery_method
    @smtp_settings = smtp_settings

    # Validate required parameters
    raise ArgumentError, "Recipient email is required" unless @recipient_email
    raise ArgumentError, "Subject is required" unless @subject
    raise ArgumentError, "Email body is required" unless @email_body
    raise ArgumentError, "Sender email is required" unless @sender_email
    raise ArgumentError, "Sender password is required" unless @sender_password
  end

  def call
    begin
      mail = Mail.new do
        from    @sender_email
        to      @recipient_email
        subject @subject
        body    @email_body
      end

      mail.delivery_method @delivery_method, @smtp_settings

      mail.deliver

      Sublayer.configuration.logger.log(:info, "Email sent successfully to #{@recipient_email}")

      return {"status": "success", "message": "Email sent successfully"}
    rescue StandardError => e
      Sublayer.configuration.logger.log(:error, "Error sending email: #{e.message}")
      return {"status": "error", "message": "Error sending email: #{e.message}"}
    end
  end

end