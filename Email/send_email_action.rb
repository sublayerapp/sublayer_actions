require 'mail'

# Description: Sublayer::Action responsible for sending a formatted email message.
# This action allows for easy integration of email communication into Sublayer workflows,
# enabling notifications, reports, or other email-based interactions.
#
# It is initialized with recipient, subject, and message (which can be HTML formatted).
# It returns true if the email was sent successfully.
#
# Example usage: When you want to send a notification or a report generated by an AI process.

class SendEmailAction < Sublayer::Actions::Base
  def initialize(recipient:, subject:, message:, from: ENV['EMAIL_FROM'] || 'sublayer@example.com')
    @recipient = recipient
    @subject = subject
    @message = message
    @from = from
  end

  def call
    begin
      mail = Mail.new do
        from    @from
        to      @recipient
        subject @subject

        html_part do
          content_type 'text/html; charset=UTF-8'
          body @message
        end
      end

      mail.delivery_method :smtp, {
        address:              ENV['EMAIL_SMTP_ADDRESS'] || 'smtp.example.com',
        port:                 ENV['EMAIL_SMTP_PORT'] || 587,
        user_name:            ENV['EMAIL_SMTP_USERNAME'],
        password:             ENV['EMAIL_SMTP_PASSWORD'],
        authentication:       ENV['EMAIL_SMTP_AUTHENTICATION'] || 'plain',
        enable_starttls_auto: ENV['EMAIL_SMTP_ENABLE_STARTTLS_AUTO'] || true
      }

      mail.deliver

      Sublayer.configuration.logger.log(:info, "Email sent successfully to #{@recipient}")
      true
    rescue StandardError => e
      error_message = "Error sending email: #{e.message}"
      Sublayer.configuration.logger.log(:error, error_message)
      raise StandardError, error_message
    end
  end
end