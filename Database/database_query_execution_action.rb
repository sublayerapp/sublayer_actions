require 'pg'

# Description: Sublayer::Action responsible for executing a SQL query against a PostgreSQL database.
# This action allows for seamless integration of database operations within Sublayer workflows,
enabling retrieval and updates of data as required by AI agents or processes.
#
# Requires: 'pg' gem
# $ gem install pg
# Or add `gem 'pg'` to your Gemfile
#
# It is initialized with database connection parameters (database, host, user, password) and the SQL query string.
# It returns the result of the query execution as an array of hashes, where each hash represents a row
# and the keys represent the column names.
#
# Example usage: When you need to fetch data from a database to use in an AI-driven workflow or store the
# results generated by an AI agent in the database.

class DatabaseQueryExecutionAction < Sublayer::Actions::Base
  def initialize(database:, host:, user:, password:, query:)
    @database = database
    @host = host
    @user = user
    @password = password
    @query = query
  end

  def call
    begin
      conn = PG.connect(dbname: @database, host: @host, user: @user, password: @password)
      result = conn.exec(@query)

      Sublayer.configuration.logger.log(:info, "Successfully executed query: #{@query}")

      result.values
    rescue PG::Error => e
      error_message = "Error executing database query: #{e.message}"
      Sublayer.configuration.logger.log(:error, error_message)
      raise StandardError, error_message
    ensure
      conn&.close
    end
  end
end